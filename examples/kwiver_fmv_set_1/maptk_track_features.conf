
descriptor_type := ocv_ORB
descriptor_binary := true

# Algorithm to use for 'convert_image', which is of type 'convert_image'.
# Must be one of the following options:
# 	- bypass :: Performs no conversion and returns the given image container
convert_image:type = bypass

# A majority of the time, mask images are a single channel, however it is
# feasibly possible that certain implementations may use multi-channel masks. If
# this is true we will expect multiple-channel mask images, warning when a
# single-channel mask is provided. If this is false we error upon seeing a
# multi-channel mask image.
expect_multichannel_masks = false

# include the parameters for the feature tracker
block feature_tracker
  include core_feature_tracker.conf
endblock

# include the parameters for the video_reader
block video_reader
  include core_video_input_image_list.conf
endblock

#  Path to an input file to be opened as a video. This could be either a video
#  file or a text file containing new-line separated paths to sequential image
#  files.
video_source = image_list.txt

# Algorithm to use for 'image_reader', which is of type 'image_io'.
# Must be one of the following options:
# 	- ocv
# 	- vxl
image_reader:type = ocv

# If true, all mask images will be inverted after loading. This is useful if
# mask images read in use positive values to indicated masked areas instead of
# non-masked areas.
invert_masks = false

# Optional path to an input file containing new-line separated paths to mask
# images. This list should be parallel in association to files specified in
# ``image_list_file``. Mask image must be the same size as the image they are
# associated with.
#
# Leave this blank if no image masking is desired.
mask_list_file =

# Optional path to a file to write source-to-reference homographies for each
# frame. Leave blank to disable this output. The output_homography_generator
# algorithm type only needs to be set if this is set.
output_homography_file = results/homogs.txt

# include the parameters for the output homography generator
block output_homography_generator
  include core_output_homography_generator.conf
endblock

# Path to a file to write output tracks to. If this file exists, it will be
# overwritten.
output_tracks_file = results/tracks.txt
