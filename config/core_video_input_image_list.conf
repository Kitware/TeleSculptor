#  Algorithm to use for 'video_input'.
#  Must be one of the following options:
#  	- filter :: A video input that calls another video input and filters the
#               output on frame range and other parameters.
#  	- image_list :: Read a list of images from a list of file names and presents
#                   them in the same way as reading a video.  The actual
#                   algorithm to read an image is specified in the
#                   "image_reader" config block.  Read an image list as
#                   a video stream.
#  	- pos :: Read video metadata in AFRL POS format. The algorithm takes
#            configuration for a directory full of images and an associated
#            directory name for the metadata files. These metadata files have
#            the same base name as the image files. Each metadata file is
#            associated with the image file.
#  	- split :: Coordinate two video readers. One reader supplies the image/data
#              stream. The other reader supplies the metadata stream.
#  	- vidl_ffmpeg :: Use VXL (vidl with FFMPEG) to read video files as a
#                    sequence of images.
type = image_list


#  Algorithm to use for 'image_reader'.
#  Must be one of the following options:
#  	- ocv :: Read and write image using OpenCV.
#  	- vxl :: Use VXL (vil) to load and save image files.
image_list:image_reader:type = ocv

#  Path to search for image file. If a file name is not absolute, this list of
#  directories is scanned to find the file. The current directory '.' is
#  automatically appended to the end of the path. The format of this path is the
#  same as the standard path specification, a set of directories separated by a
#  colon (':')
image_list:path =
