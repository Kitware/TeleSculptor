# Default configuration for the "bundle_adjuster" algorithm using Ceres Solver

# Algorithm to use for 'bundle_adjuster'.
# Must be one of the following options:
# 	- ceres
# 	- hierarchical
# 	- vxl
type = ceres


# Determines how to share intrinsics across cameras.
# AUTO shares intrinsics between cameras with a common camera_intrinsic_sptr
# COMMON enforces that all cameras share common intrinsics
# UNIQUE enforces that each camera has its own intrinsics parameters.
# Must be one of the following options:
#   - AUTO_SHARE_INTRINSICS
#   - FORCE_COMMON_INTRINSICS
#   - FORCE_UNIQUE_INTRINSICS
ceres:camera_intrinsic_share_type = AUTO_SHARE_INTRINSICS

# Dogleg strategy to use.
# Must be one of the following options:
#   - TRADITIONAL_DOGLEG
#   - SUBSPACE_DOGLEG
ceres:dogleg_type = TRADITIONAL_DOGLEG

# Solver terminates if relative cost change is below this tolerance
ceres:function_tolerance = 1e-08

# Solver terminates if the maximum gradient is below this tolerance
ceres:gradient_tolerance = 1e-10

# Lens distortion model to use.
# Must be one of the following options:
#   - NO_DISTORTION
#   - POLYNOMIAL_RADIAL_DISTORTION
#   - POLYNOMIAL_RADIAL_TANGENTIAL_DISTORTION
#   - RATIONAL_RADIAL_TANGENTIAL_DISTORTION
ceres:lens_distortion_type = NO_DISTORTION

# Linear solver to use.
# Must be one of the following options:
#   - DENSE_NORMAL_CHOLESKY
#   - DENSE_QR
#   - SPARSE_NORMAL_CHOLESKY
#   - DENSE_SCHUR
#   - SPARSE_SCHUR
#   - ITERATIVE_SCHUR
#   - CGNR
ceres:linear_solver_type = SPARSE_SCHUR

# Robust loss function scale factor.
ceres:loss_function_scale = 1

# Robust loss function type to use.
# Must be one of the following options:
#   - TRIVIAL_LOSS
#   - HUBER_LOSS
#   - SOFT_L_ONE_LOSS
#   - CAUCHY_LOSS
#   - ARCTAN_LOSS
#   - TUKEY_LOSS
ceres:loss_function_type = CAUCHY_LOSS

# Maximum number of iteration of allow
ceres:max_num_iterations = 500

# Number of threads to use in the linear solver
ceres:num_linear_solver_threads = 8

# Number of threads to use
ceres:num_threads = 8

# Include aspect ratio parameters in bundle adjustment.
ceres:optimize_aspect_ratio = false

# Include radial lens distortion parameter k1 in bundle adjustment.
ceres:optimize_dist_k1 = true

# Include radial lens distortion parameter k2 in bundle adjustment.
ceres:optimize_dist_k2 = false

# Include radial lens distortion parameter k3 in bundle adjustment.
ceres:optimize_dist_k3 = false

# Include radial lens distortion parameters k4, k5, and k6 in bundle adjustment.
ceres:optimize_dist_k4_k5_k6 = false

# Include tangential lens distortion parameters p1 and p2 in bundle adjustment.
ceres:optimize_dist_p1_p2 = false

# Include focal length parameters in bundle adjustment.
ceres:optimize_focal_length = true

# Include principal point parameters in bundle adjustment.
ceres:optimize_principal_point = false

# Include skew parameters in bundle adjustment.
ceres:optimize_skew = false

# Solver terminates if the relative change in parameters is below this tolerance
ceres:parameter_tolerance = 1e-08

# Preconditioner to use.
# Must be one of the following options:
#   - IDENTITY
#   - JACOBI
#   - SCHUR_JACOBI
#   - CLUSTER_JACOBI
#   - CLUSTER_TRIDIAGONAL
ceres:preconditioner_type = SCHUR_JACOBI

# Trust region step compution algorithm used by Ceres.
# Must be one of the following options:
#   - LEVENBERG_MARQUARDT
#   - DOGLEG
ceres:trust_region_strategy_type = LEVENBERG_MARQUARDT

# If true, write status messages to the terminal showing optimization progress
# at each iteration
ceres:verbose = true
